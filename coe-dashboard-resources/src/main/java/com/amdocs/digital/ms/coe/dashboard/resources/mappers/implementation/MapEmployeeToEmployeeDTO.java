//This code was generated by MS-Builder
package com.amdocs.digital.ms.coe.dashboard.resources.mappers.implementation;

import com.amdocs.digital.ms.coe.dashboard.business.repository.dto.interfaces.IEmployeeDTO;
import com.amdocs.digital.ms.coe.dashboard.resources.mappers.interfaces.IMapEmployeeToEmployeeDTO;
import com.amdocs.digital.ms.coe.dashboard.resources.models.Employee;
import java.util.ArrayList;
import java.util.List;
import javax.inject.Inject;
import javax.inject.Provider;

public class MapEmployeeToEmployeeDTO implements IMapEmployeeToEmployeeDTO
{
	@Inject
	private Provider<IEmployeeDTO> iEmployeeDTOProvider;

	@Override
	public IEmployeeDTO map(Employee employee)
	{
		if(null == employee) {
			return null;
		}

		IEmployeeDTO iEmployeeDTO = iEmployeeDTOProvider.get();
		iEmployeeDTO.setAdditionalInfo(employee.getAdditionalInfo());
		iEmployeeDTO.setAmdocsExperience(employee.getAmdocsExperience());
		iEmployeeDTO.setAmdocsJourney(employee.getAmdocsJourney());
		iEmployeeDTO.setApproved(employee.getApproved());
		iEmployeeDTO.setAreaOfCriticalIssue(employee.getAreaOfCriticalIssue());
		iEmployeeDTO.setContributedToDesign(employee.getContributedToDesign());
		iEmployeeDTO.setCurrentAccount(employee.getCurrentAccount());
		iEmployeeDTO.setDevOpsKnowledge(employee.getDevOpsKnowledge());
		iEmployeeDTO.setEmpDesc(employee.getEmpDesc());
		iEmployeeDTO.setEmpEmail(employee.getEmpEmail());
		iEmployeeDTO.setEmpId(employee.getEmpId());
		iEmployeeDTO.setEmpImage(employee.getEmpImage());
		iEmployeeDTO.setEmpName(employee.getEmpName());
		iEmployeeDTO.setEmpPassword(employee.getEmpPassword());
		iEmployeeDTO.setEmpRole(employee.getEmpRole());
		iEmployeeDTO.setEngagementActivityContribution(employee.getEngagementActivityContribution());
		iEmployeeDTO.setExplorationInterest(employee.getExplorationInterest());

		if (null != employee.getFunctionalKnowledge()) {
			List<String> stringArr = new ArrayList<>();

			for (String curr : employee.getFunctionalKnowledge())
			{
				stringArr.add(curr);
			}

			iEmployeeDTO.setFunctionalKnowledge(stringArr);
		}

		iEmployeeDTO.setHobbiesSports(employee.getHobbiesSports());
		iEmployeeDTO.setMentoringAbility(employee.getMentoringAbility());
		iEmployeeDTO.setPresentationSkills(employee.getPresentationSkills());

		if (null != employee.getPrimaryProductSubdomain()) {
			List<String> stringArr = new ArrayList<>();

			for (String curr : employee.getPrimaryProductSubdomain())
			{
				stringArr.add(curr);
			}

			iEmployeeDTO.setPrimaryProductSubdomain(stringArr);
		}


		if (null != employee.getPrimaryTechSkill()) {
			List<String> stringArr = new ArrayList<>();

			for (String curr : employee.getPrimaryTechSkill())
			{
				stringArr.add(curr);
			}

			iEmployeeDTO.setPrimaryTechSkill(stringArr);
		}

		iEmployeeDTO.setProductionSupport(employee.getProductionSupport());

		if (null != employee.getSecondaryProduct()) {
			List<String> stringArr = new ArrayList<>();

			for (String curr : employee.getSecondaryProduct())
			{
				stringArr.add(curr);
			}

			iEmployeeDTO.setSecondaryProduct(stringArr);
		}


		if (null != employee.getSecondaryTechSkill()) {
			List<String> stringArr = new ArrayList<>();

			for (String curr : employee.getSecondaryTechSkill())
			{
				stringArr.add(curr);
			}

			iEmployeeDTO.setSecondaryTechSkill(stringArr);
		}

		iEmployeeDTO.setSupervisorName(employee.getSupervisorName());
		iEmployeeDTO.setTotalExperience(employee.getTotalExperience());

		return iEmployeeDTO;
	}
}
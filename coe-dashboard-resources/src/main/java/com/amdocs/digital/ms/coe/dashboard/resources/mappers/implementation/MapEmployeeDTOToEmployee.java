//This code was generated by MS-Builder
package com.amdocs.digital.ms.coe.dashboard.resources.mappers.implementation;

import com.amdocs.digital.ms.coe.dashboard.business.repository.dto.interfaces.IEmployeeDTO;
import com.amdocs.digital.ms.coe.dashboard.resources.mappers.interfaces.IMapEmployeeDTOToEmployee;
import com.amdocs.digital.ms.coe.dashboard.resources.models.Employee;
import java.util.ArrayList;
import java.util.List;

public class MapEmployeeDTOToEmployee implements IMapEmployeeDTOToEmployee
{
	@Override
	public Employee map(IEmployeeDTO iEmployeeDTO)
	{
		if(null == iEmployeeDTO) {
			return null;
		}

		Employee employee = new Employee();
		employee.setAdditionalInfo(iEmployeeDTO.getAdditionalInfo());
		employee.setAmdocsExperience(iEmployeeDTO.getAmdocsExperience());
		employee.setAmdocsJourney(iEmployeeDTO.getAmdocsJourney());
		employee.setApproved(iEmployeeDTO.getApproved());
		employee.setAreaOfCriticalIssue(iEmployeeDTO.getAreaOfCriticalIssue());
		employee.setContributedToDesign(iEmployeeDTO.getContributedToDesign());
		employee.setCurrentAccount(iEmployeeDTO.getCurrentAccount());
		employee.setDevOpsKnowledge(iEmployeeDTO.getDevOpsKnowledge());
		employee.setEmpDesc(iEmployeeDTO.getEmpDesc());
		employee.setEmpEmail(iEmployeeDTO.getEmpEmail());
		employee.setEmpId(iEmployeeDTO.getEmpId());
		employee.setEmpImage(iEmployeeDTO.getEmpImage());
		employee.setEmpName(iEmployeeDTO.getEmpName());
		employee.setEmpPassword(iEmployeeDTO.getEmpPassword());
		employee.setEmpRole(iEmployeeDTO.getEmpRole());
		employee.setEngagementActivityContribution(iEmployeeDTO.getEngagementActivityContribution());
		employee.setExplorationInterest(iEmployeeDTO.getExplorationInterest());

		if (null != iEmployeeDTO.getFunctionalKnowledge()) {
			List<String> stringArr = new ArrayList<>();

			for (String curr : iEmployeeDTO.getFunctionalKnowledge())
			{
				stringArr.add(curr);
			}

			employee.setFunctionalKnowledge(stringArr);
		}

		employee.setHobbiesSports(iEmployeeDTO.getHobbiesSports());
		employee.setMentoringAbility(iEmployeeDTO.getMentoringAbility());
		employee.setPresentationSkills(iEmployeeDTO.getPresentationSkills());

		if (null != iEmployeeDTO.getPrimaryProductSubdomain()) {
			List<String> stringArr = new ArrayList<>();

			for (String curr : iEmployeeDTO.getPrimaryProductSubdomain())
			{
				stringArr.add(curr);
			}

			employee.setPrimaryProductSubdomain(stringArr);
		}


		if (null != iEmployeeDTO.getPrimaryTechSkill()) {
			List<String> stringArr = new ArrayList<>();

			for (String curr : iEmployeeDTO.getPrimaryTechSkill())
			{
				stringArr.add(curr);
			}

			employee.setPrimaryTechSkill(stringArr);
		}

		employee.setProductionSupport(iEmployeeDTO.getProductionSupport());

		if (null != iEmployeeDTO.getSecondaryProduct()) {
			List<String> stringArr = new ArrayList<>();

			for (String curr : iEmployeeDTO.getSecondaryProduct())
			{
				stringArr.add(curr);
			}

			employee.setSecondaryProduct(stringArr);
		}


		if (null != iEmployeeDTO.getSecondaryTechSkill()) {
			List<String> stringArr = new ArrayList<>();

			for (String curr : iEmployeeDTO.getSecondaryTechSkill())
			{
				stringArr.add(curr);
			}

			employee.setSecondaryTechSkill(stringArr);
		}

		employee.setSupervisorName(iEmployeeDTO.getSupervisorName());
		employee.setTotalExperience(iEmployeeDTO.getTotalExperience());

		return employee;
	}
}
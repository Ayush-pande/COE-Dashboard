//This code was generated by MS-Builder
package com.amdocs.digital.ms.coe.dashboard.resources.delegates;

import javax.inject.Inject;

import com.amdocs.digital.ms.coe.dashboard.business.repository.dto.interfaces.IEmployeeDTO;
import com.amdocs.digital.ms.coe.dashboard.business.services.interfaces.IEmployeeUpdatePutApplicationService;
import com.amdocs.digital.ms.coe.dashboard.resources.implementation.EmployeeApiImpl.EmployeeUpdatePutParameters;
import com.amdocs.digital.ms.coe.dashboard.resources.implementation.EmployeeApiImpl.IEmployeeUpdatePutDelegate;
import com.amdocs.digital.ms.coe.dashboard.resources.mappers.interfaces.IMapEmployeeDTOToEmployee;
import com.amdocs.digital.ms.coe.dashboard.resources.mappers.interfaces.IMapEmployeeToEmployeeDTO;
import com.amdocs.digital.ms.coe.dashboard.resources.models.Employee;
import com.amdocs.msbase.queryparameters.Filter;
import com.amdocs.msbase.queryparameters.PaginationInfo;
import com.amdocs.msbase.queryparameters.SelectedAttributes;
import com.amdocs.msbase.queryparameters.SortFields;
import org.springframework.http.ResponseEntity;

public class EmployeeUpdatePutDelegate implements IEmployeeUpdatePutDelegate
{
	@Inject
	protected IMapEmployeeToEmployeeDTO mapEmployeeToEmployeeDTO;

	@Inject
	protected IMapEmployeeDTOToEmployee mapEmployeeDTOToEmployee;

	@Inject
	protected IEmployeeUpdatePutApplicationService employeeUpdatePutApplicationService;

	@Override
	public ResponseEntity<Employee> execute(EmployeeUpdatePutParameters parameters)
	{
		String authorization = parameters.getAuthorization();
		Employee employee = parameters.getEmployee();

		IEmployeeDTO requestEmployeeDTO = mapEmployeeToEmployeeDTO.map(employee);
		Filter filterConditions = parameters.getFilterConditions();
		PaginationInfo paginationInfo = parameters.getPaginationInfo();
		SelectedAttributes selectAttributes = parameters.getSelectAttributes();
		SortFields sortFields = parameters.getSortFields();

		IEmployeeDTO serviceResult = employeeUpdatePutApplicationService.employeeUpdatePut(authorization, requestEmployeeDTO, filterConditions, paginationInfo, selectAttributes, sortFields);
		Employee response = mapEmployeeDTOToEmployee.map(serviceResult);
		return ResponseEntity.ok(response);
	}
}
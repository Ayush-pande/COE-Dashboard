<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.amdocs.digital.ms.coe.dashboard</groupId>
        <artifactId>coe-dashboard-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../coe-dashboard-parent</relativePath>
    </parent>
    <artifactId>coe-dashboard-exe</artifactId>
    <name>${project.groupId}:${project.artifactId}</name>
    <dependencies>

        <dependency>
            <groupId>com.amdocs.digital.ms.coe.dashboard</groupId>
            <artifactId>coe-dashboard-resources</artifactId>
        </dependency>

        <dependency>
            <groupId>com.amdocs.digital.ms.coe.dashboard</groupId>
            <artifactId>coe-dashboard-services</artifactId>
        </dependency>

        <dependency>
            <groupId>com.amdocs.digital.ms.coe.dashboard</groupId>
            <artifactId>coe-dashboard-persistence</artifactId>
        </dependency>

        <dependency>
            <groupId>com.amdocs.digital.ms.coe.dashboard</groupId>
            <artifactId>coe-dashboard-gateways</artifactId>
        </dependency>

        <dependency>
            <groupId>com.amdocs.digital.ms.coe.dashboard</groupId>
            <artifactId>coe-dashboard-internationalization</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amdocs.msbase</groupId>
            <artifactId>msb-wrapper-security-impl</artifactId>
        </dependency>
        <!-- nextms-psm dependencies (test purpose only) -->
        <dependency>
            <groupId>com.amdocs.msnext</groupId>
            <artifactId>msnext-boot-full-runtime-dependencies</artifactId>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <!-- Hystrix-Feign support -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.netflix.archaius</groupId>
            <artifactId>archaius-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-hystrix</artifactId>
        </dependency>        
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-netflix-archaius</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amdocs.msnext</groupId>
            <artifactId>sleuth-hystrix-feign-builder</artifactId>
        </dependency>
        <!-- End -->
    </dependencies>
     <profiles>
         <profile>
           <id>development</id>
	   <activation>
	     <property>
	       <name>!docker.testing.registry</name>
	     </property>
	   </activation>
	   <properties>
	     <docker.testing.registry>${docker.push.registry}</docker.testing.registry>
	   </properties>
         </profile>
	 <profile>
	   <id>regular</id>
	   <activation>
	     <property>
	       <name>!pushRegistry</name>
	     </property>
	   </activation>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <executions>
                    <execution>
                        <id>revision</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- Copy any additional configuration files for MSNext runtime which overrides the defaults -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-conf-d</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/conf.d</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/conf.d</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                         <id>read-from-ci-settings</id>
                         <phase>validate</phase>
                         <goals>
                             <goal>copy-resources</goal>
                         </goals>
                         <configuration>
                             <outputDirectory>${basedir}/target/ci</outputDirectory>
                             <resources>
                                 <resource>
                                     <directory>src/main/ci</directory>
                                     <filtering>true</filtering>
                                 </resource>
                             </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Create coe-dashboard-service docker image -->
            <plugin>
                <groupId>com.amdocs.digital</groupId>
                <artifactId>ms360-image-builder-maven-plugin</artifactId>
                <configuration>
                    <platforms>
                        <platform>
                            <type>linux/amd64</type>
                        </platform>
                        <platform>
                            <type>linux/arm64</type>
                        </platform>
                    </platforms>
                    <verbose>true</verbose>
                    <images>
                        <image>
                            <name>${docker.testing.registry}/${docker.image.name}:${docker.image.release}</name>
                            <build>
                                <tags>
                                    <tag>${docker.image.tag}</tag>
                                </tags>
                                <from>${docker.pull.registry}/${mpp.initcontainer.base.image.name}:${mpp.initcontainer.base.image.version}</from>
                                <labels>
                                    <imageName>${docker.image.name}</imageName>
                                    <imageVersion>${docker.image.release}</imageVersion>
                                    <amdocs.group.name>${docker.image.amdocs.group.name}</amdocs.group.name>
                                    <product.name>${docker.image.product.name}</product.name>
                                </labels>
                                <assembly>
                                    <mode>dir</mode>
                                    <basedir>/deployable</basedir>
                                    <inline>
                                        <id>add-coe-dashboard-ms-files</id>
                                        <fileSets>
                                            <fileSet>
                                                <directory>${project.build.directory}</directory>
                                                <includes>
                                                    <include>*.jar</include>
                                                </includes>
                                                <outputDirectory>deploy</outputDirectory>
                                            </fileSet>
                                            <fileSet>
                                                <directory>${project.build.directory}/addJars</directory>
                                                <includes>
                                                    <include>*.jar</include>
                                                </includes>
                                                <outputDirectory>deploy</outputDirectory>
                                            </fileSet>
                                            <fileSet>
                                                <directory>${project.build.directory}/conf.d</directory>
                                                <includes>
                                                    <include>**/*.*</include>
                                                </includes>
                                                <outputDirectory>etc/conf.d</outputDirectory>
                                            </fileSet>
                                        </fileSets>
                                    </inline>
                                </assembly>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.amdocs.digital</groupId>
                <artifactId>ms360-config-maven-plugin</artifactId>
                <executions>
                    <execution>
                       <id>buildHelmChart</id>
                       <phase>process-resources</phase>
                       <goals>
                          <goal>buildHelmChart</goal>
                       </goals>
                       <configuration>
                           <msConfigFile>config-params.yaml</msConfigFile>
                           <customHelmChart>src/main/helm</customHelmChart>
                           <parentHelmChart>root</parentHelmChart>
                           <mppRuntimeContainerName>${mpp.runtimecontainer.ocp.name}</mppRuntimeContainerName>
                           <mppRuntimeContainerVersion>${mpp.runtimecontainer.ocp.version}</mppRuntimeContainerVersion>
                           <swaggerFile>${project.build.directory}/${swagger-file.artifactId}.yaml</swaggerFile>
                           <copySwaggerFile>true</copySwaggerFile>
                       </configuration>
                   </execution>
               </executions>
           </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <configuration>
                        <generateGitPropertiesFile>false</generateGitPropertiesFile>
                        <verbose>false</verbose>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
   </profile>
     <profile>
            <id>deploy_files</id>
            <build>
                <plugins>
                    <!-- Set new property variable docker.path.repository contains path separation -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>regex-property</id>
                                <goals>
                                    <goal>regex-property</goal>
                                </goals>
                                <configuration>
                                    <name>docker.path.repository</name>
                                    <value>${docker.testing.registry}</value>
                                    <regex>(.*)[\:](.*)</regex>
                                    <replacement>$1/$2</replacement>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Deploy tar file and pom.xml of current module -->
                    <plugin>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>deploy-file</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>deploy-file</goal>
                                </goals>
                                <configuration>
                                    <file>target/docker/${docker.path.repository}/${docker.image.name}/${project.version}/tmp/docker-build.tar</file>
                                    <pomFile>pom.xml</pomFile>
                                    <repositoryId>${project.distributionManagement.repository.id}</repositoryId>
                                    <url>${project.distributionManagement.repository.url}</url>
                                    <packaging>tar</packaging>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
          <id>repush</id>
          <activation>
            <property>
              <name>pushRegistry</name>
            </property>
          </activation>
          <build>
            <plugins>
              <plugin>
                <groupId>com.amdocs.digital</groupId>
                <artifactId>ms360-image-builder-maven-plugin</artifactId>
                <configuration>
                  <verbose>true</verbose>
                  <images>
                    <image>
                      <name>${pushRegistry}/${docker.image.name}:${docker.image.release}</name>
                      <build>
                        <tags>
                          <tag>${docker.image.tag}</tag>
                        </tags>
                        <from>${docker.testing.registry}/${docker.image.name}:${docker.image.release}</from>
                      </build>
                    </image>
                  </images>
                </configuration>
              </plugin>
            </plugins>
          </build>
        </profile>
    </profiles>
</project>
